[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm>=6.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "sigclean"
description = "A comprehensive Python library for cleaning and preprocessing biomedical signals"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "MIT"}
authors = [
    {name = "Diptiman Mohanta", email = "diptimanmohanta7@gmail.com"}
]
maintainers = [
    {name = "Diptiman Mohanta", email = "diptimanmohanta7@gmail.com"}
]
keywords = [
    "biomedical",
    "signal processing", 
    "ECG",
    "EMG", 
    "EEG",
    "filtering",
    "preprocessing",
    "noise reduction",
    "artifact removal"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Signal Processing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.19.0",
    "scipy>=1.6.0",
    "matplotlib>=3.3.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/diptiman-mohanta/sigclean"
Documentation = "https://sigclean.readthedocs.io/"
Repository = "https://github.com/diptiman-mohanta/sigclean.git"
"Bug Tracker" = "https://github.com/diptiman-mohanta/sigclean/issues"
Changelog = "https://github.com/diptiman-mohanta/sigclean/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "flake8>=3.8",
    "isort>=5.0",
    "mypy>=0.800",
    "pre-commit>=2.15",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-xdist>=2.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.12",
    "myst-parser>=0.15",
]
all = [
    "sigclean[dev,test,docs]"
]

[tool.setuptools]
packages = ["sigclean"]

[tool.setuptools.dynamic]
version = {attr = "sigclean.__version__"}

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=sigclean",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["sigclean"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scipy.*",
    "matplotlib.*",
]
ignore_missing_imports = true